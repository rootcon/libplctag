message("Building test utilities.")

# Define the source files for ab_server
set(AB_SERVER_FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/cip.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/cip.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/compat.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/cpf.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/cpf.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/eip.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/eip.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/main.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/memory.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/memory.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/mutex.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/mutex.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/pccc.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/pccc.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/plc.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/slice.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/socket.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/socket.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/tcp_server.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/tcp_server.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/thread.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/thread.h
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/utils.c
    ${CMAKE_CURRENT_SOURCE_DIR}/ab_server/src/utils.h
)

# Add ab_server executable
add_executable(ab_server ${AB_SERVER_FILES})

message("BASE_C_FLAGS = ${BASE_C_FLAGS}")
message("CMAKE_C_FLAGS_DEBUG = ${CMAKE_C_FLAGS_DEBUG}")

# Set compile flags for ab_server (ensure C11 and static linking)
foreach(AB_SERVER_FILE ${AB_SERVER_FILES})
    set_source_files_properties("${AB_SERVER_FILE}" PROPERTIES COMPILE_FLAGS "${BASE_C_FLAGS}")
endforeach()

# set the include files for the ab_server
target_include_directories(ab_server PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/ab_server")

# Set link flags for ab_server
if(BASE_LINK_FLAGS)
    set_target_properties(ab_server PROPERTIES LINK_FLAGS "${BASE_LINK_FLAGS}")
# else()
#     set_target_properties(ab_server PROPERTIES LINK_FLAGS "-static")
endif()

if(UNIX AND BUILD_MODBUS_EMULATOR)
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(LIBMODBUS REQUIRED libmodbus)

    # Add modbus_server executable
    add_executable(modbus_server ${CMAKE_CURRENT_SOURCE_DIR}/modbus_server/modbus_server.c)

    target_include_directories(modbus_server PRIVATE ${LIBMODBUS_INCLUDE_DIRS})

    target_link_libraries(modbus_server ${LIBMODBUS_LINK_LIBRARIES})


    macro(print_all_modbus_variables)
        message(STATUS "print_all_modbus_variables------------------------------------------{")
        get_cmake_property(_variableNames VARIABLES)
        foreach (_variableName ${_variableNames})
            string(REGEX MATCH "^LIBMODBUS.*" MATCHED_STR "${_variableName}")
            if(MATCHED_STR)
                message(STATUS "${_variableName}=${${_variableName}}")
            endif()
        endforeach()
        message(STATUS "print_all_modbus_variables------------------------------------------}")
    endmacro()

    # Debugging
    # print_all_modbus_variables()
else()
    message("Not building Modbus test server.")
endif()
